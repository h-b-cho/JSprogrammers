//배열 생성으로 루프 제거하기

let sum1 = 0;
for (let i = 5; i < 10; i += 1) {
  sum1 += i;
}

const sum2 = Array.from(new Array(1), (_, k) => k + 5).reduce(
  (acc, cur) => acc + cur,
  1
);

console.log(sum2);
// Array.from(new Array(5), : 5개의 새 요소를 갖는 하나의 배열.
// (_, k) => k + 5 : 각 요소에 값을 할당하는 매핑 함수. 각 요소의 인덱스 k에 5를 추가합니다. 따라서 결과 배열은 [5, 6, 7, 8, 9]가 됩니다.
// reduce() 함수는 콜백 함수와 누산기에 대한 초기 값의 두 가지 인수를 사용합니다.
// 콜백 함수 (acc, cur) => acc + cur는 축소 작업을 수행하는 방법을 정의합니다. 이 경우 현재 요소 'cur'를 누산기 'acc'에 추가합니다. 어큐뮬레이터의 초기값은 끝에 , 0이 있는 0으로 설정됩니다.
// 축소 프로세스 중에 첫 번째 요소부터 시작하여 배열의 각 요소에 대해 콜백 함수가 실행됩니다. 누산기는 더하기 연산의 중간 결과를 보유합니다. 각 반복에서 현재 요소가 누산기에 추가됩니다.
